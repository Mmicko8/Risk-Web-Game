---

apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: http-hc-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 8080
    type: HTTP
    requestPath: /api/lobby/openLobbies/20

---

apiVersion: apps/v1
kind: Deployment
metadata:
    name: backend
    labels:
      app: &label spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: *label
  template:
    metadata:
      labels:
        app: *label
    spec:  
      containers:
      - name: springboot
        image: registry.gitlab.com/kdg-ti/integratieproject-2/teams-22-23/team-6/risk-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: ui_url
          value: http://www.risk.gq
        - name: ai_url
          value: http://ai-service:5000
        - name: backend_url
          value: http://www.risk.gq
        - name: database
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: dbconstr
        - name: username_database
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: password
          valueFrom:
              secretKeyRef:
                name: db-secret
                key: password
      - image: gcr.io/cloudsql-docker/gce-proxy:latest
        name: cloud-sql-proxy
        command: 
          - "/cloud_sql_proxy"
          - "-log_debug_stdout"
          - "-ip_address_types=PRIVATE"
          - "-instances=CHANGEME"
      serviceAccountName: ip-testenv-ksa-account
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
      imagePullSecrets:
      - name: registry-credentials-backend
      restartPolicy: Always
      

---
apiVersion: "v1"
kind: "Service"
metadata:
  annotations:
    cloud.google.com/backend-config: '{"default": "http-hc-config"}'
  name: "backend-service"
  labels:
    app: &label spring
spec:
  type: NodePort
  ports:
  - protocol: "TCP"
    port: 8080
    targetPort: 8080
  selector:
    app: *label

---

apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-scaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend-deployment
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 150